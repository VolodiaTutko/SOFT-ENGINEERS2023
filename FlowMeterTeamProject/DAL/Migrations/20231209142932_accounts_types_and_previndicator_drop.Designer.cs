// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FlowMeterTeamProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231209142932_accounts_types_and_previndicator_drop")]
    partial class accountstypesandprevindicatordrop
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Data.Account", b =>
                {
                    b.Property<string>("PersonalAccount")
                        .HasColumnType("text");

                    b.Property<string>("ColdWater")
                        .HasColumnType("text");

                    b.Property<string>("Electricity")
                        .HasColumnType("text");

                    b.Property<string>("Heating")
                        .HasColumnType("text");

                    b.Property<string>("HotWater")
                        .HasColumnType("text");

                    b.Property<string>("PublicService")
                        .HasColumnType("text");

                    b.HasKey("PersonalAccount");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("DAL.Data.Consumer", b =>
                {
                    b.Property<int>("ConsumersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ConsumersId"));

                    b.Property<string>("ConsumerOwner")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("Flat")
                        .HasColumnType("integer");

                    b.Property<int?>("HeatingArea")
                        .HasColumnType("integer");

                    b.Property<int>("HouseId")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfPersons")
                        .HasColumnType("integer");

                    b.Property<string>("PersonalAccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ConsumersId");

                    b.ToTable("consumers");
                });

            modelBuilder.Entity("DAL.Data.Counter", b =>
                {
                    b.Property<int>("CountersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountersId"));

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("CurrentIndicator")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TypeOfAccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CountersId");

                    b.ToTable("counters");
                });

            modelBuilder.Entity("DAL.Data.Employee", b =>
                {
                    b.Property<string>("EmployeeLogin")
                        .HasColumnType("text");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeOfUser")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("EmployeeLogin");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("DAL.Data.House", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HouseId"));

                    b.Property<int?>("HeatingAreaOfHouse")
                        .HasColumnType("integer");

                    b.Property<string>("HouseAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("NumberOfFlat")
                        .HasColumnType("integer");

                    b.Property<int?>("NumberOfResidents")
                        .HasColumnType("integer");

                    b.HasKey("HouseId");

                    b.ToTable("houses");
                });

            modelBuilder.Entity("DAL.Data.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceId"));

                    b.Property<int?>("HouseId")
                        .HasColumnType("integer");

                    b.Property<int?>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("TypeOfAccount")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ServiceId");

                    b.ToTable("services");
                });
#pragma warning restore 612, 618
        }
    }
}
